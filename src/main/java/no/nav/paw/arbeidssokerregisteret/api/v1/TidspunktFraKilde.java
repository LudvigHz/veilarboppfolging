/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package no.nav.paw.arbeidssokerregisteret.api.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class TidspunktFraKilde extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 657669269495701017L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TidspunktFraKilde\",\"namespace\":\"no.nav.paw.arbeidssokerregisteret.api.v1\",\"fields\":[{\"name\":\"tidspunkt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"doc\":\"Tidspunktet melding ideelt sett skulle vært registert på.\"},{\"name\":\"avviksType\",\"type\":{\"type\":\"enum\",\"name\":\"AvviksType\",\"doc\":\"Ukjent verdi settes aldri direkte, men brukes som standardverdi og\\nfor å indikere at en verdi er ukjent for mottaker av melding, dvs at\\nat den er satt til en verdi som ikke er definert i Avro-skjemaet til mottaker.\\n\\nFORSINKELSE - Grunnen til avvik mellom kilde og register er generell forsinkelse\\n\\t\\t\\t\\t som oppstår i asynkrone systemer.\\n\\nRETTING - \\tGrunnen til avvik mellom kilde og register er at en feil i kilde er rettet\\n             med virking bakover i tid.\",\"symbols\":[\"UKJENT_VERDI\",\"FORSINKELSE\",\"RETTING\"],\"default\":\"UKJENT_VERDI\"},\"doc\":\"Årsaken til til avvik i tid mellom kilde og register.\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<TidspunktFraKilde> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<TidspunktFraKilde> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<TidspunktFraKilde> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<TidspunktFraKilde> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<TidspunktFraKilde> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this TidspunktFraKilde to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a TidspunktFraKilde from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a TidspunktFraKilde instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static TidspunktFraKilde fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Tidspunktet melding ideelt sett skulle vært registert på. */
  private java.time.Instant tidspunkt;
  /** Årsaken til til avvik i tid mellom kilde og register. */
  private no.nav.paw.arbeidssokerregisteret.api.v1.AvviksType avviksType;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TidspunktFraKilde() {}

  /**
   * All-args constructor.
   * @param tidspunkt Tidspunktet melding ideelt sett skulle vært registert på.
   * @param avviksType Årsaken til til avvik i tid mellom kilde og register.
   */
  public TidspunktFraKilde(java.time.Instant tidspunkt, no.nav.paw.arbeidssokerregisteret.api.v1.AvviksType avviksType) {
    this.tidspunkt = tidspunkt.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.avviksType = avviksType;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return tidspunkt;
    case 1: return avviksType;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: tidspunkt = (java.time.Instant)value$; break;
    case 1: avviksType = (no.nav.paw.arbeidssokerregisteret.api.v1.AvviksType)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'tidspunkt' field.
   * @return Tidspunktet melding ideelt sett skulle vært registert på.
   */
  public java.time.Instant getTidspunkt() {
    return tidspunkt;
  }


  /**
   * Sets the value of the 'tidspunkt' field.
   * Tidspunktet melding ideelt sett skulle vært registert på.
   * @param value the value to set.
   */
  public void setTidspunkt(java.time.Instant value) {
    this.tidspunkt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Gets the value of the 'avviksType' field.
   * @return Årsaken til til avvik i tid mellom kilde og register.
   */
  public no.nav.paw.arbeidssokerregisteret.api.v1.AvviksType getAvviksType() {
    return avviksType;
  }


  /**
   * Sets the value of the 'avviksType' field.
   * Årsaken til til avvik i tid mellom kilde og register.
   * @param value the value to set.
   */
  public void setAvviksType(no.nav.paw.arbeidssokerregisteret.api.v1.AvviksType value) {
    this.avviksType = value;
  }

  /**
   * Creates a new TidspunktFraKilde RecordBuilder.
   * @return A new TidspunktFraKilde RecordBuilder
   */
  public static no.nav.paw.arbeidssokerregisteret.api.v1.TidspunktFraKilde.Builder newBuilder() {
    return new no.nav.paw.arbeidssokerregisteret.api.v1.TidspunktFraKilde.Builder();
  }

  /**
   * Creates a new TidspunktFraKilde RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TidspunktFraKilde RecordBuilder
   */
  public static no.nav.paw.arbeidssokerregisteret.api.v1.TidspunktFraKilde.Builder newBuilder(no.nav.paw.arbeidssokerregisteret.api.v1.TidspunktFraKilde.Builder other) {
    if (other == null) {
      return new no.nav.paw.arbeidssokerregisteret.api.v1.TidspunktFraKilde.Builder();
    } else {
      return new no.nav.paw.arbeidssokerregisteret.api.v1.TidspunktFraKilde.Builder(other);
    }
  }

  /**
   * Creates a new TidspunktFraKilde RecordBuilder by copying an existing TidspunktFraKilde instance.
   * @param other The existing instance to copy.
   * @return A new TidspunktFraKilde RecordBuilder
   */
  public static no.nav.paw.arbeidssokerregisteret.api.v1.TidspunktFraKilde.Builder newBuilder(no.nav.paw.arbeidssokerregisteret.api.v1.TidspunktFraKilde other) {
    if (other == null) {
      return new no.nav.paw.arbeidssokerregisteret.api.v1.TidspunktFraKilde.Builder();
    } else {
      return new no.nav.paw.arbeidssokerregisteret.api.v1.TidspunktFraKilde.Builder(other);
    }
  }

  /**
   * RecordBuilder for TidspunktFraKilde instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TidspunktFraKilde>
    implements org.apache.avro.data.RecordBuilder<TidspunktFraKilde> {

    /** Tidspunktet melding ideelt sett skulle vært registert på. */
    private java.time.Instant tidspunkt;
    /** Årsaken til til avvik i tid mellom kilde og register. */
    private no.nav.paw.arbeidssokerregisteret.api.v1.AvviksType avviksType;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(no.nav.paw.arbeidssokerregisteret.api.v1.TidspunktFraKilde.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.tidspunkt)) {
        this.tidspunkt = data().deepCopy(fields()[0].schema(), other.tidspunkt);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.avviksType)) {
        this.avviksType = data().deepCopy(fields()[1].schema(), other.avviksType);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
    }

    /**
     * Creates a Builder by copying an existing TidspunktFraKilde instance
     * @param other The existing instance to copy.
     */
    private Builder(no.nav.paw.arbeidssokerregisteret.api.v1.TidspunktFraKilde other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.tidspunkt)) {
        this.tidspunkt = data().deepCopy(fields()[0].schema(), other.tidspunkt);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.avviksType)) {
        this.avviksType = data().deepCopy(fields()[1].schema(), other.avviksType);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'tidspunkt' field.
      * Tidspunktet melding ideelt sett skulle vært registert på.
      * @return The value.
      */
    public java.time.Instant getTidspunkt() {
      return tidspunkt;
    }


    /**
      * Sets the value of the 'tidspunkt' field.
      * Tidspunktet melding ideelt sett skulle vært registert på.
      * @param value The value of 'tidspunkt'.
      * @return This builder.
      */
    public no.nav.paw.arbeidssokerregisteret.api.v1.TidspunktFraKilde.Builder setTidspunkt(java.time.Instant value) {
      validate(fields()[0], value);
      this.tidspunkt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'tidspunkt' field has been set.
      * Tidspunktet melding ideelt sett skulle vært registert på.
      * @return True if the 'tidspunkt' field has been set, false otherwise.
      */
    public boolean hasTidspunkt() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'tidspunkt' field.
      * Tidspunktet melding ideelt sett skulle vært registert på.
      * @return This builder.
      */
    public no.nav.paw.arbeidssokerregisteret.api.v1.TidspunktFraKilde.Builder clearTidspunkt() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'avviksType' field.
      * Årsaken til til avvik i tid mellom kilde og register.
      * @return The value.
      */
    public no.nav.paw.arbeidssokerregisteret.api.v1.AvviksType getAvviksType() {
      return avviksType;
    }


    /**
      * Sets the value of the 'avviksType' field.
      * Årsaken til til avvik i tid mellom kilde og register.
      * @param value The value of 'avviksType'.
      * @return This builder.
      */
    public no.nav.paw.arbeidssokerregisteret.api.v1.TidspunktFraKilde.Builder setAvviksType(no.nav.paw.arbeidssokerregisteret.api.v1.AvviksType value) {
      validate(fields()[1], value);
      this.avviksType = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'avviksType' field has been set.
      * Årsaken til til avvik i tid mellom kilde og register.
      * @return True if the 'avviksType' field has been set, false otherwise.
      */
    public boolean hasAvviksType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'avviksType' field.
      * Årsaken til til avvik i tid mellom kilde og register.
      * @return This builder.
      */
    public no.nav.paw.arbeidssokerregisteret.api.v1.TidspunktFraKilde.Builder clearAvviksType() {
      avviksType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public TidspunktFraKilde build() {
      try {
        TidspunktFraKilde record = new TidspunktFraKilde();
        record.tidspunkt = fieldSetFlags()[0] ? this.tidspunkt : (java.time.Instant) defaultValue(fields()[0]);
        record.avviksType = fieldSetFlags()[1] ? this.avviksType : (no.nav.paw.arbeidssokerregisteret.api.v1.AvviksType) defaultValue(fields()[1]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<TidspunktFraKilde>
    WRITER$ = (org.apache.avro.io.DatumWriter<TidspunktFraKilde>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<TidspunktFraKilde>
    READER$ = (org.apache.avro.io.DatumReader<TidspunktFraKilde>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










